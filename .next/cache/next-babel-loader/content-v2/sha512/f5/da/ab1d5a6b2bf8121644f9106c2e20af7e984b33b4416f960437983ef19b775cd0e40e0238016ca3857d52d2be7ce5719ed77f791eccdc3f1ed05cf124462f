{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/NLW04/Projeto01/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\NLW04\\\\Projeto01\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  var countdownTimeout;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      console.log(\"Contador finalizado.\");\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n      onClick: resetCountdown,\n      children: \"Parar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.countdownButton,\n      onClick: startCountdown,\n      children: \"Iniciar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Countdown, \"ocrxlP93zfM61bh38iet/2CNRQY=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/NLW04/Projeto01/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","countdownTimeout","startCountdown","resetCountdown","clearTimeout","setTimeout","console","log","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBAECH,QAAQ,CAAC,MAAM,EAAP,CAFT;AAAA,MAEhBI,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGSL,QAAQ,CAAC,KAAD,CAHjB;AAAA,MAGhBM,QAHgB;AAAA,MAGNC,WAHM;;AAKvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AANuB,8BAQWQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARX;AAAA;AAAA,MAQhBC,UARgB;AAAA,MAQJC,WARI;;AAAA,+BASWJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CATX;AAAA;AAAA,MAShBG,UATgB;AAAA,MASJC,WATI;;AAWvB,MAAIC,gBAAJ;;AAEA,WAASC,cAAT,GAA0B;AACrBb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACJ;;AAED,WAASc,cAAT,GAA0B;AACrBC,IAAAA,YAAY,CAACH,gBAAD,CAAZ;AACAZ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACJ;;AAEDJ,EAAAA,SAAS,CAAC,YAAM;AACX,QAAIK,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACrBe,MAAAA,gBAAgB,GAAGI,UAAU,CAAC,YAAM;AAC/BlB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACJ,OAF4B,EAE1B,IAF0B,CAA7B;AAGJ,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AAC9BoB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACJ;AACL,GARQ,EAQN,CAACnB,QAAD,EAAWF,IAAX,CARM,CAAT;AAUA,sBACK;AAAA,4BACK;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACwB,kBAAvB;AAAA,8BACK;AAAA,gCACK;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALL,eAMK;AAAA,gCACK;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,EAaMZ,QAAQ,gBACJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,YAAKJ,MAAM,CAACyB,eAAZ,cAA+BzB,MAAM,CAAC0B,qBAAtC,CAA/B;AAA8F,MAAA,OAAO,EAAEP,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEnB,MAAM,CAACyB,eAAxC;AAAyD,MAAA,OAAO,EAAEP,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADL;AAqBJ;;GAtDejB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown() {\r\n\r\n     const [time, setTime] = useState(0.1 * 60);\r\n     const [isActive, setIsActive] = useState(false);\r\n\r\n     const minutes = Math.floor(time / 60);\r\n     const seconds = time % 60;\r\n\r\n     const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n     const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n     let countdownTimeout: NodeJS.Timeout;\r\n\r\n     function startCountdown() {\r\n          setIsActive(true);\r\n     }\r\n\r\n     function resetCountdown() {\r\n          clearTimeout(countdownTimeout);\r\n          setIsActive(false);\r\n          setTime(0.1 * 60);\r\n     }\r\n\r\n     useEffect(() => {\r\n          if (isActive && time > 0) {\r\n               countdownTimeout = setTimeout(() => {\r\n                    setTime(time - 1);\r\n               }, 1000)\r\n          } else if (isActive && time === 0) {\r\n               console.log(\"Contador finalizado.\")\r\n          }\r\n     }, [isActive, time]);\r\n\r\n     return (\r\n          <div>\r\n               <div className={styles.countdownContainer}>\r\n                    <div>\r\n                         <span>{minuteLeft}</span>\r\n                         <span>{minuteRight}</span>\r\n                    </div>\r\n                    <span>:</span>\r\n                    <div>\r\n                         <span>{secondLeft}</span>\r\n                         <span>{secondRight}</span>\r\n                    </div>\r\n               </div>\r\n\r\n               {isActive ? (\r\n                    <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>Parar ciclo</button>\r\n               ) : (\r\n                         <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>Iniciar ciclo</button>\r\n                    )}\r\n          </div >\r\n     );\r\n}"]},"metadata":{},"sourceType":"module"}