{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW04\\\\Projeto01\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const challengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(challengesContext.Provider, {\n    value: {\n      level,\n      levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, this);\n}","map":{"version":3,"sources":["C:/NLW04/Projeto01/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AAErE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,iBAAD;AAAA,OAAoBC;AAApB,MAA4CP,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAA,OAACQ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDT,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASU,OAAT,GAAmB;AACdL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACJ;;AAED,sBACK,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAnC;AAAA,cACMP;AADN;AAAA;AAAA;AAAA;AAAA,UADL;AAKJ","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\r\n\r\nexport const challengesContext = createContext({});\r\n\r\ninterface ChallengesProviderProps {\r\n     children: ReactNode;\r\n}\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n\r\n     const [level, setLevel] = useState(1);\r\n     const [currentExperience, setCurrentExperience] = useState(0);\r\n     const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n     function levelUp() {\r\n          setLevel(level + 1);\r\n     }\r\n\r\n     return (\r\n          <challengesContext.Provider value={{ level, levelUp }}>\r\n               {children}\r\n          </challengesContext.Provider>\r\n     );\r\n}"]},"metadata":{},"sourceType":"module"}