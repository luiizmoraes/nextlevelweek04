{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\NLW04\\\\Projeto01\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio ðŸš€', {\n        body: `Valendo ${challenge.amount} xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n}","map":{"version":3,"sources":["C:/NLW04/Projeto01/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\n\r\ninterface ChallengesProviderProps {\r\n     children: ReactNode;\r\n     level: number;\r\n     currentExperience: number;\r\n     challengesCompleted: number;\r\n}\r\n\r\ninterface Challenge {\r\n     type: 'body' | 'eye';\r\n     description: string;\r\n     amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n     level: number;\r\n     currentExperience: number;\r\n     challengesCompleted: number;\r\n     experienceToNextLevel: number;\r\n     activeChallenge: Challenge;\r\n     levelUp: () => void;\r\n     startNewChallenge: () => void;\r\n     resetChallenge: () => void;\r\n     completeChallenge: () => void;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\r\n\r\n     const [level, setLevel] = useState(1);\r\n     const [currentExperience, setCurrentExperience] = useState(0);\r\n     const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n     const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n     const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n     useEffect(() => {\r\n          Notification.requestPermission();\r\n     }, [])\r\n\r\n     useEffect(() => {\r\n          Cookies.set('level', String(level));\r\n          Cookies.set('currentExperience', String(currentExperience));\r\n          Cookies.set('challengesCompleted', String(challengesCompleted));\r\n     }, [level, currentExperience, challengesCompleted]);\r\n\r\n     function levelUp() {\r\n          setLevel(level + 1);\r\n     }\r\n\r\n     function startNewChallenge() {\r\n          const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n          const challenge = challenges[randomChallengeIndex];\r\n\r\n\r\n\r\n          setActiveChallenge(challenge);\r\n\r\n          new Audio('/notification.mp3').play();\r\n\r\n          if (Notification.permission === 'granted') {\r\n               new Notification('Novo desafio ðŸš€', {\r\n                    body: `Valendo ${challenge.amount} xp!`\r\n               })\r\n          }\r\n\r\n     }\r\n\r\n     function resetChallenge() {\r\n          setActiveChallenge(null);\r\n     }\r\n\r\n     function completeChallenge() {\r\n          if (!activeChallenge) {\r\n               return;\r\n          }\r\n\r\n          const { amount } = activeChallenge;\r\n\r\n          let finalExperience = currentExperience + amount;\r\n\r\n          if (finalExperience >= experienceToNextLevel) {\r\n               finalExperience = finalExperience - experienceToNextLevel;\r\n               levelUp();\r\n          }\r\n\r\n          setCurrentExperience(finalExperience);\r\n          setActiveChallenge(null);\r\n          setChallengesCompleted(challengesCompleted + 1);\r\n\r\n     }\r\n\r\n\r\n     return (\r\n          <ChallengesContext.Provider\r\n               value={{\r\n                    level,\r\n                    currentExperience,\r\n                    challengesCompleted,\r\n                    levelUp,\r\n                    startNewChallenge,\r\n                    activeChallenge,\r\n                    resetChallenge,\r\n                    experienceToNextLevel,\r\n                    completeChallenge\r\n               }}>\r\n               {children}\r\n          </ChallengesContext.Provider>\r\n     );\r\n}"]},"metadata":{},"sourceType":"module"}